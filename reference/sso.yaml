openapi: 3.0.1
info:
  title: SSOAPI definition
  version: v0
  contact:
    name: Artem Ivlev
  description: Апи входа
servers:
  - url: 'http://localhost:8989'
    description: Generated server url
paths:
  /oauth2/token:
    post:
      tags:
        - token-controller
      operationId: getToken
      parameters:
        - name: Authorization
          description: 'Basic UsernamePassword. В качестве параметров Username Password для заголовка используются значения clientKey и clientSecret, которые указаны  в настроенном сервис провайдере в WSO2 IS'
          in: header
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: X-Device-FingerPrint
          description: Для МП. base64 упакованный JSON объект описания устройства с которого пользователь входит. 
          in: header
          required: false
          style: simple
          explode: false
          schema:
            type: string
        - name: Accept
          description: для ИБ
          in: header
          required: false
          style: simple
          explode: false
          schema:
            type: string
        - name: Accept-Encoding
          description: для ИБ
          in: header
          required: false
          style: simple
          explode: false
          schema:
            type: string
        - name: Accept-Language
          description: для ИБ
          in: header
          required: false
          style: simple
          explode: false
          schema:
            type: string
        - name: Referer
          description: для ИБ
          in: header
          required: false
          style: simple
          explode: false
          schema:
            type: string
        - name: User-Agent
          description: для ИБ
          in: header
          required: false
          style: simple
          explode: false
          schema:
            type: string
        - name: X-Forwarded-For
          description: для ИБ. Ip адрес 
          in: header
          required: false
          style: simple
          explode: false
          schema:
            type: string
        - name: scope
          in: query
          required: true
          style: form
          explode: true
        - name: Content-Type
          description: тип контента запроса
          in: header
          required: false
          style: simple
          explode: false
          schema:
            type: string
      responses:
        '200':
          description: Всё хорошо - объект с токенами
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenDto'
        '400':         
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDtoInvalidGrant'
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorDtoSecondFactorRequired'
                  - $ref: '#/components/schemas/ErrorDtoAuthenticationFailed'
                  - $ref: '#/components/schemas/ErrorDtoOtpExpired'
                  - $ref: '#/components/schemas/ErrorDtoIncorrectPin'
                  - $ref: '#/components/schemas/ErrorDtoPasswordRequired'              
        '403':
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorDtoNoMorePinAttempts'
                  - $ref: '#/components/schemas/ErrorDtoGenericBusinessLogic'
                  - $ref: '#/components/schemas/ErrorDtoDeviceTokenNotActive'
                  - $ref: '#/components/schemas/ErrorDtoUserLocked'
                  - $ref: '#/components/schemas/ErrorDtoSpmAccessDeny'
                  - $ref: '#/components/schemas/ErrorDtoImsiNotVerified'
                  - $ref: '#/components/schemas/ErrorDtoCardTypeRestricted'
                  - $ref: '#/components/schemas/ErrorDtoCardNotValid'
        '404':
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorDtoCardNotFound'
                  - $ref: '#/components/schemas/ErrorDtoUserNotFound'
                  - $ref: '#/components/schemas/ErrorDtoDeviceNotFound'
        '500':
          description: Непредвиденная ошибка
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDtoGenericError'
      description: Получение токена
      security:
        - service-provider: []
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: ../models/TokenRequestDto.yaml
        description: |
          application/x-www-form-urlencoded:
  /oidc/logout:
    get:
      tags:
        - token-controller
      operationId: logout
      parameters:
        - name: id_token_hint
          description: id_token (JWT-токен)
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: string
      responses:
        '200':
          description: default response
      description: Запрос для выхода пользователя (Logout)
components:
  schemas:
    ErrorDto: 
      type: object
      properties:
        type:
          type: string
          description: Тип ошибки
        message:
          type: string
          description: Текст ошибки
        message_title:
          type: string
          description: Заголовок ошибки
      required:
        - type
        - message
        - message_title

    ErrorDtoInvalidGrant:
      type: object
      description: "invalid_grant - Неверное значение grant_type"
      allOf: 
        - $ref: '#/components/schemas/ErrorDto'
    
    ErrorDtoSecondFactorRequired:
      description: second_factor_required - требуется второй фактор
      allOf: 
        - $ref: '#/components/schemas/ErrorDto'
        - type: object        
          properties:       
                additional_properties:
                  type: object
                  properties:
                    username:
                      type: string
                      description: УНК
                    domain:
                      type: string
                      description: домен Клиента (master)
                    transactionId:
                      type: string
                      description: идентификатор транзакции (необходим для проверки otp)
                    mobile:
                      type: string
                      description: 'номер мобильного телефона в формате 912***6789'
                    sessionDataKey:
                      type: string
                      description: Идентификатор сессии входа
                  required:
                    - username
                    - domain
                    - transactionId  
                    - sessionDataKey          
        
    ErrorDtoIncorrectPin: 
      type: object
      description: Только для МП! incorrect_pin - неверный пасскод (попытки ввода остались)
      allOf: 
        - $ref: '#/components/schemas/ErrorDto'
    
    ErrorDtoAuthenticationFailed:
      description: "authentication_failed - ошибка атуентификации"
      allOf: 
        - $ref: '#/components/schemas/ErrorDto'
    
    ErrorDtoOtpExpired: 
      type: object
      description: "otp_expired - otp (код из смс) просрочен"
      allOf: 
        - $ref: '#/components/schemas/ErrorDto'
    
    ErrorDtoPasswordRequired: 
      type: object
      description: Только для МП! password_required - необходимо ввести пароль (скомпрометированный Клиент)
      allOf: 
        - $ref: '#/components/schemas/ErrorDto'

    ErrorDtoNoMorePinAttempts: 
      type: object
      description: Только для МП! no_more_pin_attempts - Неверный пин (попыток ввода не осталось)
      allOf: 
        - $ref: '#/components/schemas/ErrorDto'

    ErrorDtoGenericBusinessLogic: 
      type: object
      description: generic_business_logic - Непредвиденная ошибка в бизнес логике
      allOf: 
        - $ref: '#/components/schemas/ErrorDto'

    ErrorDtoDeviceTokenNotActive: 
          type: object
          description: Только для МП! device_token_not_active - Токен устройства не активен
          allOf: 
            - $ref: '#/components/schemas/ErrorDto'

    ErrorDtoUserLocked:
      description: user_locked - Учетная запись заблокирована
      allOf: 
        - $ref: '#/components/schemas/ErrorDto'
        - type: object        
          properties:       
                additional_properties:
                  type: object
                  properties:
                    temporary:
                      type: boolean
                      description: Временная блокировка (true) или постоянная (false)
                            
    ErrorDtoSpmAccessDeny:
      description: spm_access_deny - СПМ запретила доступ данному пользователю
      allOf: 
        - $ref: '#/components/schemas/ErrorDto'

    ErrorDtoImsiNotVerified:
      description: imsi_not_verified - Ошибка проверки imsi
      allOf: 
        - $ref: '#/components/schemas/ErrorDto'
    
    ErrorDtoCardTypeRestricted:
      description: card_type_restricted - По данной карте доступ запрещен
      allOf: 
        - $ref: '#/components/schemas/ErrorDto'

    ErrorDtoCardNotValid:
      description: card_not_valid - Карта не пригодна для входа
      allOf: 
        - $ref: '#/components/schemas/ErrorDto'

    ErrorDtoDeviceNotFound:
      description: Только для МП! device_not_found - Устройство не найдено
      allOf: 
        - $ref: '#/components/schemas/ErrorDto'

    ErrorDtoUserNotFound:
      description: user_not_found - Учетная запись не найдена
      allOf: 
        - $ref: '#/components/schemas/ErrorDto'

    ErrorDtoGenericError:
      description: generic_error - Непредвиденная ошибка
      allOf: 
        - $ref: '#/components/schemas/ErrorDto'

    ErrorDtoCardNotFound:
      description: card_not_found - Карта не найдена
      allOf: 
        - $ref: '#/components/schemas/ErrorDto'

    TokenDto:
      type: object
      properties:
        scope:
          type: string
          default: openid
        access_token:
          type: string
        refresh_token:
          type: string
        id_token:
          type: string
  securitySchemes:
    service-provider:
      type: http
      scheme: basic
      description: Авторизация сервис провайдера
tags:
  - name: token-controller
